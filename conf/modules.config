def outdir = "quicksand_${manifest.version}"

process {
    //
    // Workflow: Splitbam
    //
    if(params.bam){
        withName: "splitbam:SPLITBAM" {
            publishDir = [path:"split", mode:"copy", pattern:"*.{bam,txt}" ]
        }
    }
    withName: "ESTIMATE_CC" {
        publishDir = [path:"${outdir}", mode:"copy", pattern:"*.{txt}" ]
    }
    //
    // Workflow: Bamfilter
    //
    withName: "bamfilter.*SAMTOOLS_FILTER" {
        ext.args = "-F ${params.bamfilterflag}"
    }
    withName: "bamfilter.*BAM_LENGTHFILTER" {
        ext.args = "-c ${params.bamfilter_length_cutoff} -l ${params.compression_level}"
    }
    //
    // Workflow: Krakenrun
    //
    withName: "krakenrun:RUN_KRAKENUNIQ" {
        publishDir = [path: "${outdir}/stats", mode: "copy", pattern:"*.{translate,report}"]
    }
    withName: "krakenrun.*PARSE_KRAKEN_REPORT"{
        ext.args = "${params.krakenuniq_min_kmers} ${params.krakenuniq_min_reads}"
    }
    withname: "krakenrun.*EXTRACT_TAXON" {
        ext.args = "-l ${params.compression_level}"
    }
    //
    // Workflow: Bamextract
    //
    withName: "bamextract.*SAMTOOLS_SORT" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {extracted_out},
            pattern: "sorted_*.bam",
        ]
        ext.args = "-n -l ${params.compression_level}"
    }
    //
    // Workflow: mapbwa
    //
    withName: "mapbam.*MAP_BWA" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {out_bam},
            pattern: "*.bam",
        ]
    }
    withName: "mapbam.*SAMTOOLS_FILTER" {
        ext.args = "-q ${params.mapbwa_quality_cutoff}"
    }
    //
    // workflow dedupbam
    //
    withname:".*BAM_RMDUP" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {out_bam},
            pattern: "*.bam",
        ]
    }
    //
    // workflow bedfilterbam
    //
    withname:".*BEDTOOLS_INTERSECT" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {out_bam},
            pattern: "*.bam",
        ]
    }
}

