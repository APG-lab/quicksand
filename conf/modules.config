def outdir = "quicksand_${manifest.version}"

process {

    //
    // Workflow: Splitbam
    //

    if(params.bam){
        withName: "SPLITBAM" {
            publishDir = [path:"split", mode:"copy", pattern:"*.{bam,txt}" ]
        }
    }
    withName: "ESTIMATE_CC" {
        publishDir = [path:"${outdir}", mode:"copy", pattern:"*.{txt}" ]
    }

    //
    // Workflow: Bamfilter
    //

    withName: "SAMTOOLS_FILTER" {
        ext.args = "-F ${params.bamfilterflag}"
    }

    withName: "BAM_LENGTHFILTER" {
        ext.args = "-c ${params.bamfilter_length_cutoff} -l ${params.compression_level}"
    }

    //
    // Workflow: Krakenrun
    //

    withName: "RUN_KRAKENUNIQ" {
        publishDir = [path: "${outdir}/stats", mode: "copy", pattern:"*.{translate,report}"]
    }

    withName: "PARSE_KRAKEN_REPORT"{
        ext.args = "${params.krakenuniq_min_kmers} ${params.krakenuniq_min_reads}"
    }

    withName: "EXTRACT_TAXON" {
        ext.args = "-l ${params.compression_level}"
    }

    //
    // Workflow: Bamextract
    //

    withName: "bamextract:SAMTOOLS_SORT" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {extracted_out},
            pattern: "sorted_*.bam",
        ]
        ext.args = "-n -l ${params.compression_level}"
    }

    //
    // Workflow: mapbwa
    //

    withName: "MAP_BWA" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {mapbwa_out},
            pattern: "mapped_*.bam",
        ]
        ext.args = "-n 0.01 -o 2 -l 16500"
    }

    withName: "mapbam:SAMTOOLS_FILTER" {
        ext.args = "-q ${params.mapbwa_quality_cutoff}"
    }

    //
    // workflow dedupbam
    //

    withName:"BAM_RMDUP" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {bamrmdup_out},
            pattern: "deduped_*.bam",
        ]
        ext.args = "-r"
    }

    //
    // workflow bedfilterbam
    //

    withName:"bedfilterbam.*BEDTOOLS_INTERSECT" {
        publishDir = [
            path: "${outdir}/out",
            mode: "copy",
            saveAs: {out_bam},
            pattern: "*.bam",
        ]
    }

    //
    // Deamination
    //

    withName:"BAM_DEAM_BEST" {
        ext.args = "only_stats"
    }
}

